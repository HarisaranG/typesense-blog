(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{356:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-1.005fffeb.png"},357:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-2.8bda7cdb.png"},358:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-3.3d117cc9.png"},359:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-4.328fdbb5.png"},360:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-5.f63eee7f.png"},361:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-6.9d0b6d80.png"},362:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-7.e70f6a39.png"},363:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-8.9487124f.png"},364:function(t,a,s){t.exports=s.p+"assets/img/dynamodb-typesense-integration-9.24d5636a.png"},375:function(t,a,s){"use strict";s.r(a);var e=s(45),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"dynamodb-integration-with-typesense"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dynamodb-integration-with-typesense"}},[t._v("#")]),t._v(" DynamoDB Integration with Typesense")]),t._v(" "),e("p",[t._v("Hey there! This post give you a guide to integrate Typesense server with AWS DynamoDB by setting up a trigger with AWS Lambda.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(356),alt:"Typesense DynamoDB Integration Chart"}})]),t._v(" "),e("h2",{attrs:{id:"create-aws-dynambodb-with-streams-enabled"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-aws-dynambodb-with-streams-enabled"}},[t._v("#")]),t._v(" Create AWS DynamboDB with streams enabled")]),t._v(" "),e("p",[t._v('Create a DynamoDB with your choice of name and partition key ("id" is recommended). Now, after creating a DynamoDB database you should enable streams in the "Overview" section.')]),t._v(" "),e("p",[e("img",{attrs:{src:s(357),alt:"DynamoDB streams"}})]),t._v(" "),e("p",[t._v("If you are doing this in AWS CLI,")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws dynamodb create-table "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --table-name typensense "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --attribute-definitions "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AttributeName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("id,AttributeType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("N "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --key-schema "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("AttributeName")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("id,KeyType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("HASH  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --provisioned-throughput "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ReadCapacityUnits")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(",WriteCapacityUnits"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --stream-specification "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("StreamEnabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true,StreamViewType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NEW_AND_OLD_IMAGES\n")])])]),e("h2",{attrs:{id:"setting-up-triggers-for-dyanmodb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-triggers-for-dyanmodb"}},[t._v("#")]),t._v(" Setting up Triggers for DyanmoDB")]),t._v(" "),e("p",[t._v("Create a trigger for DynamoDB database and this will lead you to AWS Lambada function's page from there you can select an existing funciton or a new function. In this tutorial the function name is "),e("code",[t._v("typesense-indexing")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(358),alt:"DynamoDB Triggers"}})]),t._v(" "),e("p",[t._v('Then now you need to create a "Lambda Execution Role" i.e give permission for your function. Now, head over to IAM Roles section and create a new role with three main permissions:')]),t._v(" "),e("ul",[e("li",[t._v("AmazonDynamoDBFullAccess")]),t._v(" "),e("li",[t._v("AmazonDynamoDBFullAccesswithDataPipeline")]),t._v(" "),e("li",[t._v("AWSLambdaBasicExecutionRole")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(359),alt:"IAM Execution Role"}})]),t._v(" "),e("p",[t._v("Now, attach this execution role to the trigger Lambda funtion of DynamoDB.")]),t._v(" "),e("h2",{attrs:{id:"create-lambda-execution-role-only-for-command-line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-lambda-execution-role-only-for-command-line"}},[t._v("#")]),t._v(" Create Lambda Execution Role (only for Command Line)")]),t._v(" "),e("p",[t._v("Create a file named "),e("code",[t._v("trust-relationship.json")]),t._v(" with the following contents.")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-10-17"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Statement"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Effect"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Allow"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Principal"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Service"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lambda.amazonaws.com"')]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Action"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sts:AssumeRole"')]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Then, create execute the following command")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws iam create-role --role-name TypesenseLambdaRole "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --path "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/service-role/"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --assume-role-policy-document file://trust-relationship.json\n")])])]),e("p",[t._v("Now, create "),e("code",[t._v("role-policy.json")]),t._v(" with the following contents. (Replace "),e("code",[t._v("accountID")]),t._v(" and "),e("code",[t._v("region")]),t._v(")")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Version"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2012-10-17"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Statement"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Effect"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Allow"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Action"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lambda:InvokeFunction"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Resource"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:lambda:region:accountID:function:typesense-indexing*"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Effect"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Allow"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Action"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logs:CreateLogGroup"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logs:CreateLogStream"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logs:PutLogEvents"')]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Resource"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:logs:region:accountID:*"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Effect"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Allow"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Action"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamodb:DescribeStream"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamodb:GetRecords"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamodb:GetShardIterator"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dynamodb:ListStreams"')]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Resource"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:dynamodb:region:accountID:table/typesense/stream/*"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The policy has three statements that allow TypesenseLambdaRole to do the following:")]),t._v(" "),e("ul",[e("li",[t._v("Run a Lambda function "),e("code",[t._v("typesense-indexing")]),t._v(". You create the function later in this tutorial.")]),t._v(" "),e("li",[t._v("Access Amazon CloudWatch Logs. The Lambda function writes diagnostics to CloudWatch Logs at runtime.")]),t._v(" "),e("li",[t._v("Read data from the DynamoDB stream for "),e("code",[t._v("typesense")]),t._v(".")])]),t._v(" "),e("p",[t._v("Now, we are going to attach the above roles to our IAM execution role which we have created")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws iam put-role-policy --role-name TypesenseLambdaRole "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --policy-name TypesenseLambdaRolePolicy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --policy-document file://role-policy.json\n")])])]),e("h2",{attrs:{id:"importing-typesense-python-package-in-lambda-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#importing-typesense-python-package-in-lambda-function"}},[t._v("#")]),t._v(" Importing "),e("code",[t._v("typesense")]),t._v(" python package in Lambda function")]),t._v(" "),e("p",[t._v("We can't use "),e("code",[t._v("pip install")]),t._v(" in Lambda functions. So, the workaround way for that is use AWS Cloud9 service and create Lambda function layer and add it to our "),e("code",[t._v("typesense-indexing")]),t._v(" function.")]),t._v(" "),e("h3",{attrs:{id:"create-a-cloud9-linux-instance-aws"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-cloud9-linux-instance-aws"}},[t._v("#")]),t._v(" Create a Cloud9 Linux instance AWS")]),t._v(" "),e("p",[t._v("Create a new Environment in Cloud9 with your choice of name and the default choice of settings ("),e("code",[t._v("t2.micro")]),t._v(", "),e("code",[t._v("Amazon Linux 2")]),t._v("). Click 'Create Environment'. Then, you are good to go")]),t._v(" "),e("p",[e("img",{attrs:{src:s(360),alt:"AWS Cloud9"}})]),t._v(" "),e("h3",{attrs:{id:"create-a-typesense-layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-a-typesense-layer"}},[t._v("#")]),t._v(" Create a "),e("code",[t._v("typesense")]),t._v(" layer")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" dependencies\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" dependencies\nvirtualenv v-env\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ./v-env/bin/activate\npip "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" typesense\npip "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" simplejson\ndeactivate\n")])])]),e("p",[t._v("In the above "),e("code",[t._v("pip install")]),t._v(" you can add all the dependencies for your project in that environment")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" python\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" python\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/v-env/lib64/python3.7/site-packages/* "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" -r typesense_layer.zip python\naws lambda publish-layer-version --layer-name typesense "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--zip-file fileb://typesense_layer.zip --compatible-runtimes python3.7\n")])])]),e("p",[t._v("Check your "),e("code",[t._v("python version")]),t._v(" and add the folder name according to that. For e.g., "),e("code",[t._v("python3.6")]),t._v(" it is "),e("code",[t._v("dist-packages")]),t._v(" instead of "),e("code",[t._v("site-packages")]),t._v(". Even check and change runtime version of the Lambda function.")]),t._v(" "),e("h3",{attrs:{id:"adding-typesense-layer-to-lambda"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-typesense-layer-to-lambda"}},[t._v("#")]),t._v(" Adding "),e("code",[t._v("typesense")]),t._v(" layer to Lambda")]),t._v(" "),e("p",[e("img",{attrs:{src:s(361),alt:"AWS Lambda Layer"}})]),t._v(" "),e("p",[t._v("Now, add the created layer to your "),e("code",[t._v("typesense-indexing")]),t._v(" lambda function by choosing "),e("code",[t._v("'Add layer' -> 'Custom Layer'")])]),t._v(" "),e("p",[e("img",{attrs:{src:s(362),alt:"AWS Lambda Layer"}})]),t._v(" "),e("p",[t._v("That's it now you use "),e("code",[t._v("import typesense")]),t._v(" use typesense libraries in your AWS Lambda function.")]),t._v(" "),e("h2",{attrs:{id:"typesense-cloud"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typesense-cloud"}},[t._v("#")]),t._v(" Typesense Cloud")]),t._v(" "),e("p",[t._v("Sign-Up for a Typesense Cloud account and then create a new cluster")]),t._v(" "),e("p",[e("img",{attrs:{src:s(363),alt:"Typesense Cloud"}})]),t._v(" "),e("p",[t._v("After creating a cloud typesense account, you will get an 'Endpoint URL' and get a API key using 'Generate an API Key' option")]),t._v(" "),e("p",[e("img",{attrs:{src:s(364),alt:"Typesense Cloud"}})]),t._v(" "),e("p",[t._v("Using this only we will call our typesense server and index the dynamodb documents")]),t._v(" "),e("h2",{attrs:{id:"code-for-lambda-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#code-for-lambda-function"}},[t._v("#")]),t._v(" Code for Lambda function")]),t._v(" "),e("p",[t._v("Now, import the following packages which we have imported as a layer in Lambda.")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" typesense\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" simplejson "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" json\n")])])]),e("p",[t._v("Initialize a Typesense client. For the above e.g,")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("client "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" typesense"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nodes'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'host'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i3jcr4k0wfbz6qnup-1.a1.typesense.net'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'port'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'443'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'protocol'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'api_key'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'AaBOdPwIj7doBybWN5rfiXd12baeudWD'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connection_timeout_seconds'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Now, we need to create a collection. For creating a collection, check out the API Docs of typesense")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://new-site.typesense.org/docs/0.19.0/api/collections.html#create-a-collection",target:"_blank",rel:"noopener noreferrer"}},[t._v("Typesense API Docs"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("When a data is added in DynamoDB, the Lambda function is called with "),e("code",[t._v("event")]),t._v(" and "),e("code",[t._v("context")]),t._v(" parameters. A sample event parameter form DynamoDB would be,")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Records"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eventID"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eventVersion"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dynamodb"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"OldImage"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Existing values")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SequenceNumber"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"222"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Keys"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// your partion key and sort key")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"SizeBytes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"NewImage"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// New Values")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"awsRegion"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"us-east-2"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eventName"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MODIFY"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this can 'INSERT', 'MODIFY' and 'DELETE'")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eventSourceARN"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<AWS-ARN>"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eventSource"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aws:dynamodb"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("A sample to code to to process above "),e("code",[t._v("event")]),t._v(" response")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[t._v("processed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" record "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Records'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    ddb_record "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" record"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dynamodb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" record"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eventName'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'REMOVE'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<collection-name>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documents"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ddb_record"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'OldImage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'id'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'N'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delete"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        upload "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ddb_record"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NewImage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# format your document here and the use upsert function to index it.")]),t._v("\n        res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("collections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'IPL-Data'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upsert"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("upload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    processed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" processed "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Successfully processed {} records'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("processed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"deploying-a-lambda-function-only-for-command-line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploying-a-lambda-function-only-for-command-line"}},[t._v("#")]),t._v(" Deploying a Lambda function (only for Command Line)")]),t._v(" "),e("ul",[e("li",[t._v("Create a file named "),e("code",[t._v("typesense.py")]),t._v(" and add your code into it.")]),t._v(" "),e("li",[t._v("Create a zip file to contain "),e("code",[t._v("typesense.py")]),t._v(". If you have zip command-line utility"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),t._v(" typesense-indexing.zip typesense.py\n")])])])]),t._v(" "),e("li",[t._v("Get the ARN for the the execution role you created"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws iam get-role --role-name TypesenseLambdaRole\n")])])]),t._v("In output, look for ARN,"),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("...\n"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Arn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:iam::region:role/service-role/WooferLambdaRole"')]),t._v("\n...\n")])])])]),t._v(" "),e("li",[t._v("Now, create the Lambda function"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws lambda create-function "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --region us-east-2 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --function-name typesense-indexing "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --zip-file fileb://typesense-indexing.zip "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --role "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("roleARN"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --handler typesense-indexing.handler "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --timeout "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --runtime python3.7\n")])])])]),t._v(" "),e("li",[t._v("We need to ARN for DynamoDB to enable trigger for the database"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws dynamodb describe-table --table-name "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("table-name"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),t._v("Note, the ARN for the stream"),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("...\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"LatestStreamArn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"arn:aws:dynamodb:`region`:`accountID`:table/`table-name`/stream/`timestamp`"')]),t._v("\n...\n")])])])]),t._v(" "),e("li",[t._v("Now, add this ARN to Lambda"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("aws lambda create-event-source-mapping "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --region us-east-1 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --function-name typesense-indexing "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --event-source "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("streamARN "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --batch-size "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --starting-position TRIM_HORIZON\n")])])])]),t._v(" "),e("li",[t._v("Make sure to test the function with a set of sample events before enabling the trigger.")])]),t._v(" "),e("p",[t._v("That's a wrap! Now your DynamoDB database will be automatically indexed in your Typesense cluster.")])])}),[],!1,null,null,null);a.default=n.exports}}]);